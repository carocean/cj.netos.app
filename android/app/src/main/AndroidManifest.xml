<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="cj.netos.netos_app">
    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here. -->
    <!--小米-->
    <uses-permission android:name="android.permission.VIBRATE"/>
    <permission android:name="cj.netos.netos_app.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" /> <!--这里com.xiaomi.mipushdemo改成app的包名-->
    <uses-permission android:name="cj.netos.netos_app.permission.MIPUSH_RECEIVE" /><!--这里com.xiaomi.mipushdemo改成app的包名-->
    <!--小米 end-->
    <application
            android:name=".MicrogeoApplication"
            android:label="地微"
            android:largeHeap="true"
            android:usesCleartextTraffic="true"
            android:icon="@mipmap/ic_launcher"
            xmlns:tools="http://schemas.android.com/tools"
            tools:replace="android:label"
            android:requestLegacyExternalStorage="true">
        <activity android:name="io.flutter.embedding.android.FlutterActivity"
                  android:launchMode="singleInstance"
                  android:screenOrientation="portrait"
                  android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
                  android:hardwareAccelerated="true"
                  android:theme="@style/LaunchTheme"
                  android:windowSoftInputMode="adjustResize">
            <meta-data
                    android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                    android:value="true"/>
            <meta-data
                    android:name="io.flutter.embedding.android.SplashScreenDrawable"
                    android:resource="@drawable/launch_background"/>

        </activity>
        <!--
        全局只有一个运行的app实例
        android:launchMode="singleInstance"
        -->
        <activity android:name=".AcceptShareActivity"
                  android:launchMode="singleInstance"
                  android:screenOrientation="portrait"
                  android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
                  android:hardwareAccelerated="true"
                  android:theme="@style/LaunchTheme"
                  android:windowSoftInputMode="adjustResize">
            <meta-data
                    android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                    android:value="true"/>
            <meta-data
                    android:name="io.flutter.embedding.android.SplashScreenDrawable"
                    android:resource="@drawable/launch_background"/>
            <intent-filter>
                <action android:name="android.intent.action.SEND"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:mimeType="*/*"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:mimeType="*/*"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:mimeType="audio/*"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:mimeType="audio/*"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:mimeType="video/*"/>
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.SEND_MULTIPLE"/>
                <category android:name="android.intent.category.DEFAULT"/>
                <data android:mimeType="video/*"/>
            </intent-filter>
        </activity>
        <activity
                android:name=".MainActivity"
                android:launchMode="singleTop"
                android:theme="@style/LaunchTheme"
                android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
                android:hardwareAccelerated="true"
                android:screenOrientation="portrait"
                android:windowSoftInputMode="adjustResize">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
            <!--Android 接收外部跳转过滤器-->
            <!--要想在别的App上能成功调起App，必须添加intent过滤器-->
            <intent-filter>
                <!-- 协议部分配置 ,注意需要跟web配置相同-->
                <!--协议部分，随便设置 microgeo://  -->
                <data android:scheme="microgeo"/>
                <!--下面这几行也必须得设置-->
                <category android:name="android.intent.category.DEFAULT"/>
                <category android:name="android.intent.category.BROWSABLE"/>
                <action android:name="android.intent.action.VIEW"/>
            </intent-filter>
            <meta-data
                    android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                    android:value="true"/>
            <meta-data
                    android:name="io.flutter.embedding.android.SplashScreenDrawable"
                    android:resource="@drawable/launch_background"/>
        </activity>
        <!-- Don't delete the meta-data below.
            This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
                android:name="flutterEmbedding"
                android:value="2"/>

        <!--高德-->
        <meta-data
                android:name="com.amap.api.v2.apikey"
                android:value="74945179eaae7c6e14cdac77be5a8706"/>

        <!--华为-->
        <service
                android:name=".HuaweiHmsMessageService"
                android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT"/>
            </intent-filter>
        </service>

        <!--        <meta-data-->
        <!--            android:name="push_kit_auto_init_enabled"-->
        <!--            android:value="true" />-->
        <!--华为 end-->
        <!--Vivo Push需要配置的service、activity-->
        <service
                android:name="com.vivo.push.sdk.service.CommandClientService"
                android:exported="true"/>
        <!--Vivo Push SDK的版本信息-->
        <meta-data
            android:name="sdk_version_vivo"
            android:value="480"/>
        <!--Vivo Push开放平台中应用的appid 和api key-->
        <meta-data
                android:name="com.vivo.push.api_key"
                android:value="eaa6462983b1e68dba5e22c65ea9b41f"/>
        <meta-data
                android:name="com.vivo.push.app_id"
                android:value="105055871"/>
        <!--vivo end-->

        <!-- push应用定义消息receiver声明 -->
        <receiver android:name="cj.netos.netos_app.VivoPushMessageReceiverImpl">
            <intent-filter>
                <!-- 接收push消息 -->
                <action android:name="com.vivo.pushclient.action.RECEIVE"/>
            </intent-filter>
        </receiver>

        <!--小米-->
        <service
                android:name="com.xiaomi.push.service.XMPushService"
                android:enabled="true"
                android:process=":pushservice"/>

        <!--注：此service必须在3.0.1版本以后（包括3.0.1版本）加入-->
        <service
                android:name="com.xiaomi.push.service.XMJobService"
                android:enabled="true"
                android:exported="false"
                android:permission="android.permission.BIND_JOB_SERVICE"
                android:process=":pushservice"/>

        <service
                android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
                android:enabled="true"
                android:exported="true"/>

        <!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
        <service
                android:name="com.xiaomi.mipush.sdk.MessageHandleService"
                android:enabled="true"/>

        <receiver
                android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
                android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>

        <receiver
                android:name="com.xiaomi.push.service.receivers.PingReceiver"
                android:exported="false"
                android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER"/>
            </intent-filter>
        </receiver>
        <receiver
                android:exported="true"
                android:name="cj.netos.netos_app.XiaomiMessageReceiver">
            <!--这里com.xiaomi.mipushdemo.DemoMessageRreceiver改成app中定义的完整类名-->
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED"/>
            </intent-filter>
            <intent-filter>
                <action android:name="com.xiaomi.mipush.ERROR"/>
            </intent-filter>
        </receiver>
        <!--小米 end-->
    </application>
</manifest>
